openapi: 3.0.3
info:
  title: Manager API
  version: 1.0.0
  description: |
    OpenAPI specification for the Manager service. The API exposes endpoints for
    checking service health and handling guest registration via email verification.
servers:
  - url: http://localhost:{port}/techcv/api/v1
    description: Local development server
    variables:
      port:
        default: '8080'
tags:
  - name: Health
    description: Endpoints that report service health
  - name: Auth
    description: Endpoints for registering and verifying users
paths:
  /health:
    get:
      tags:
        - Health
      summary: Retrieve the API health status
      operationId: checkHealth
      responses:
        '200':
          description: Health information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthSuccessResponse'
              examples:
                success:
                  summary: Successful health check
                  value:
                    status: success
                    data:
                      status: ok
                      checked_at: '2024-01-01T00:00:00Z'
        '500':
          description: Unexpected server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/register:
    post:
      tags:
        - Auth
      summary: Initiate email based registration
      operationId: registerUser
      description: |
        Registers a guest using an email address and password. A verification email
        with a confirmation link is sent to the provided address. Registration is
        completed after the link is opened within the expiration window.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          description: Verification email dispatched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterSuccessResponse'
        '400':
          description: Invalid input supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Email already registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/verify:
    post:
      tags:
        - Auth
      summary: Verify registration token and create account
      operationId: verifyRegistration
      description: Validates a verification token and finalizes user registration.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyRequest'
      responses:
        '200':
          description: User verified and authenticated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifySuccessResponse'
        '400':
          description: Invalid or expired verification token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Verification token not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Unexpected server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    ResponseEnvelope:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          description: High-level result indicator
        data:
          description: Payload returned when the request succeeds
          nullable: true
        meta:
          description: Additional metadata for the response
          nullable: true
    ErrorDetail:
      type: object
      properties:
        field:
          type: string
        code:
          type: string
        message:
          type: string
    ErrorBody:
      type: object
      required:
        - requestId
      properties:
        requestId:
          type: string
        code:
          type: string
        message:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ResponseEnvelope'
        - type: object
          properties:
            status:
              type: string
              enum:
                - error
            error:
              $ref: '#/components/schemas/ErrorBody'
    HealthStatus:
      type: object
      required:
        - status
        - checked_at
      properties:
        status:
          type: string
          description: Health indicator value (e.g. ok)
        checked_at:
          type: string
          format: date-time
          description: Timestamp when the check was performed in UTC
    HealthSuccessResponse:
      allOf:
        - $ref: '#/components/schemas/ResponseEnvelope'
        - type: object
          properties:
            status:
              type: string
              enum:
                - success
            data:
              $ref: '#/components/schemas/HealthStatus'
    RegisterRequest:
      type: object
      required:
        - email
        - password
        - password_confirmation
      properties:
        email:
          type: string
          format: email
          description: Email address used for registration
        password:
          type: string
          minLength: 8
          description: Password containing both letters and digits
        password_confirmation:
          type: string
          minLength: 8
          description: Password confirmation; must match password
    RegisterSuccessData:
      type: object
      required:
        - message
        - expires_at
      properties:
        message:
          type: string
          description: Confirmation message for the guest
        expires_at:
          type: string
          format: date-time
          description: Expiration timestamp for the verification token in UTC
    RegisterSuccessResponse:
      allOf:
        - $ref: '#/components/schemas/ResponseEnvelope'
        - type: object
          properties:
            status:
              type: string
              enum:
                - success
            data:
              $ref: '#/components/schemas/RegisterSuccessData'
    VerifyRequest:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          description: Verification token received via email
    AuthenticatedUser:
      type: object
      required:
        - id
        - email
        - is_active
        - email_verified_at
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        name:
          type: string
          nullable: true
        bio:
          type: string
          nullable: true
        is_active:
          type: boolean
        email_verified_at:
          type: string
          format: date-time
        last_login_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    VerifySuccessData:
      type: object
      required:
        - message
        - auth_token
        - user
      properties:
        message:
          type: string
        auth_token:
          type: string
          description: Token representing the authenticated session
        user:
          $ref: '#/components/schemas/AuthenticatedUser'
    VerifySuccessResponse:
      allOf:
        - $ref: '#/components/schemas/ResponseEnvelope'
        - type: object
          properties:
            status:
              type: string
              enum:
                - success
            data:
              $ref: '#/components/schemas/VerifySuccessData'
